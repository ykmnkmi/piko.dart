{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "DartX",
  "foldingStartMarker": "\\{\\s*$",
  "foldingStopMarker": "^\\s*\\}",
  "patterns": [
    {
      "begin": "^\\w*\\b(library|import|part of|part|export)\\b",
      "beginCaptures": {
        "0": {
          "name": "keyword.other.import.dartx"
        }
      },
      "end": ";",
      "endCaptures": {
        "0": {
          "name": "punctuation.terminator.dartx"
        }
      },
      "name": "meta.declaration.dartx",
      "patterns": [
        {
          "include": "#strings"
        },
        {
          "include": "#comments"
        },
        {
          "match": "\\b(as|show|hide)\\b",
          "name": "keyword.other.import.dartx"
        }
      ]
    },
    {
      "include": "#comments"
    },
    {
      "include": "#punctuation"
    },
    {
      "include": "#annotations"
    },
    {
      "include": "#html"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#constants-and-special-vars"
    },
    {
      "include": "#strings"
    }
  ],
  "repository": {
    "doc": {
      "patterns": [
        {
          "match": "(\\[.*?\\])",
          "captures": {
            "0": {
              "name": "variable.name.source.dartx"
            }
          }
        },
        {
          "match": "^ {4,}(?![ \\*]).*",
          "captures": {
            "0": {
              "name": "variable.name.source.dartx"
            }
          }
        },
        {
          "begin": "```.*?$",
          "end": "```",
          "contentName": "variable.other.source.dartx"
        },
        {
          "match": "(`.*?`)",
          "captures": {
            "0": {
              "name": "variable.other.source.dartx"
            }
          }
        },
        {
          "match": "(`.*?`)",
          "captures": {
            "0": {
              "name": "variable.other.source.dartx"
            }
          }
        },
        {
          "match": "(\\* ((    ).*))$",
          "captures": {
            "2": {
              "name": "variable.other.source.dartx"
            }
          }
        },
        {
          "match": "(\\*    .*)$"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "captures": {
            "0": {
              "name": "punctuation.definition.comment.dartx"
            }
          },
          "match": "/\\*\\*/",
          "name": "comment.block.empty.dartx"
        },
        {
          "include": "#comments-doc-oldschool"
        },
        {
          "include": "#comments-doc"
        },
        {
          "include": "#comments-inline"
        }
      ]
    },
    "comments-doc-oldschool": {
      "patterns": [
        {
          "begin": "/\\*\\*",
          "end": "\\*/",
          "name": "comment.block.documentation.dartx",
          "patterns": [
            {
              "include": "#comments-doc-oldschool"
            },
            {
              "include": "#comments-block"
            },
            {
              "include": "#doc"
            }
          ]
        }
      ]
    },
    "comments-doc": {
      "patterns": [
        {
          "begin": "///",
          "while": "^\\s*///",
          "patterns": [
            {
              "include": "#doc"
            }
          ],
          "name": "comment.block.documentation.dartx"
        }
      ]
    },
    "comments-inline": {
      "patterns": [
        {
          "include": "#comments-block"
        },
        {
          "captures": {
            "1": {
              "name": "comment.line.double-slash.dartx"
            }
          },
          "match": "((//).*)$"
        }
      ]
    },
    "comments-block": {
      "patterns": [
        {
          "begin": "/\\*",
          "end": "\\*/",
          "name": "comment.block.dartx",
          "patterns": [
            {
              "include": "#comments-block"
            }
          ]
        }
      ]
    },
    "annotations": {
      "patterns": [
        {
          "match": "@[a-zA-Z]+",
          "name": "storage.type.annotation.dartx"
        }
      ]
    },
    "constants-and-special-vars": {
      "patterns": [
        {
          "match": "(?<!\\$)\\b(true|false|null)\\b(?!\\$)",
          "name": "constant.language.dartx"
        },
        {
          "match": "(?<!\\$)\\b(this|super)\\b(?!\\$)",
          "name": "variable.language.dartx"
        },
        {
          "match": "(?<!\\$)\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)\\b(?!\\$)",
          "name": "constant.numeric.dartx"
        },
        {
          "match": "(?<![a-zA-Z0-9_$])([_$]*[A-Z][a-zA-Z0-9_$]*|bool\\b|num\\b|int\\b|double\\b|dynamic\\b)",
          "name": "support.class.dartx"
        },
        {
          "match": "([_$]*[a-z][a-zA-Z0-9_$]*)(<|\\(|\\s+=>)",
          "captures": {
            "1": {
              "name": "entity.name.function.dartx"
            }
          }
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "match": "(?<!\\$)\\bas\\b(?!\\$)",
          "name": "keyword.cast.dartx"
        },
        {
          "match": "(?<!\\$)\\b(try|on|catch|finally|throw|rethrow)\\b(?!\\$)",
          "name": "keyword.control.catch-exception.dartx"
        },
        {
          "match": "(?<!\\$)\\b(break|case|continue|default|do|else|for|if|in|return|switch|while)\\b(?!\\$)",
          "name": "keyword.control.dartx"
        },
        {
          "match": "(?<!\\$)\\b(sync(\\*)?|async(\\*)?|await|yield(\\*)?)\\b(?!\\$)",
          "name": "keyword.control.dartx"
        },
        {
          "match": "(?<!\\$)\\bassert\\b(?!\\$)",
          "name": "keyword.control.dartx"
        },
        {
          "match": "(?<!\\$)\\b(new)\\b(?!\\$)",
          "name": "keyword.control.new.dartx"
        },
        {
          "match": "(?<!\\$)\\b(abstract|class|enum|extends|extension|external|factory|implements|get|mixin|native|operator|set|typedef|with|covariant)\\b(?!\\$)",
          "name": "keyword.declaration.dartx"
        },
        {
          "match": "(?<!\\$)\\b(is\\!?)\\b(?!\\$)",
          "name": "keyword.operator.dartx"
        },
        {
          "match": "\\?|:",
          "name": "keyword.operator.ternary.dartx"
        },
        {
          "match": "(<<|>>>?|~|\\^|\\||&)",
          "name": "keyword.operator.bitwise.dartx"
        },
        {
          "match": "((&|\\^|\\||<<|>>>?)=)",
          "name": "keyword.operator.assignment.bitwise.dartx"
        },
        {
          "match": "(=>)",
          "name": "keyword.operator.closure.dartx"
        },
        {
          "match": "(==|!=|<=?|>=?)",
          "name": "keyword.operator.comparison.dartx"
        },
        {
          "match": "(([+*/%-]|\\~)=)",
          "name": "keyword.operator.assignment.arithmetic.dartx"
        },
        {
          "match": "(=)",
          "name": "keyword.operator.assignment.dartx"
        },
        {
          "match": "(\\-\\-|\\+\\+)",
          "name": "keyword.operator.increment-decrement.dartx"
        },
        {
          "match": "(\\-|\\+|\\*|\\/|\\~\\/|%)",
          "name": "keyword.operator.arithmetic.dartx"
        },
        {
          "match": "(!|&&|\\|\\|)",
          "name": "keyword.operator.logical.dartx"
        },
        {
          "match": "(?<!\\$)\\b(static|final|const|required|late)\\b(?!\\$)",
          "name": "storage.modifier.dartx"
        },
        {
          "match": "(?<!\\$)\\b(?:void|var)\\b(?!\\$)",
          "name": "storage.type.primitive.dartx"
        }
      ]
    },
    "string-interp": {
      "patterns": [
        {
          "captures": {
            "2": {
              "name": "variable.parameter.dartx"
            },
            "3": {
              "name": "variable.parameter.dartx"
            }
          },
          "match": "\\$(([a-zA-Z0-9_]+)|\\{([^{}]+)\\})"
        },
        {
          "match": "\\\\.",
          "name": "constant.character.escape.dartx"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "begin": "(?<!r)\"\"\"",
          "end": "\"\"\"(?!\")",
          "name": "string.interpolated.triple.double.dartx",
          "patterns": [
            {
              "include": "#string-interp"
            }
          ]
        },
        {
          "begin": "(?<!r)'''",
          "end": "'''(?!')",
          "name": "string.interpolated.triple.single.dartx",
          "patterns": [
            {
              "include": "#string-interp"
            }
          ]
        },
        {
          "begin": "r\"\"\"",
          "end": "\"\"\"(?!\")",
          "name": "string.quoted.triple.double.dartx"
        },
        {
          "begin": "r'''",
          "end": "'''(?!')",
          "name": "string.quoted.triple.single.dartx"
        },
        {
          "begin": "(?<!\\|r)\"",
          "end": "\"",
          "name": "string.interpolated.double.dartx",
          "patterns": [
            {
              "match": "\\n",
              "name": "invalid.string.newline"
            },
            {
              "include": "#string-interp"
            }
          ]
        },
        {
          "begin": "r\"",
          "end": "\"",
          "name": "string.quoted.double.dartx",
          "patterns": [
            {
              "match": "\\n",
              "name": "invalid.string.newline"
            }
          ]
        },
        {
          "begin": "(?<!\\|r)'",
          "end": "'",
          "name": "string.interpolated.single.dartx",
          "patterns": [
            {
              "match": "\\n",
              "name": "invalid.string.newline"
            },
            {
              "include": "#string-interp"
            }
          ]
        },
        {
          "begin": "r'",
          "end": "'",
          "name": "string.quoted.single.dartx",
          "patterns": [
            {
              "match": "\\n",
              "name": "invalid.string.newline"
            }
          ]
        }
      ]
    },
    "punctuation": {
      "patterns": [
        {
          "match": ",",
          "name": "punctuation.comma.dartx"
        },
        {
          "match": ";",
          "name": "punctuation.terminator.dartx"
        },
        {
          "match": "\\.",
          "name": "punctuation.dot.dartx"
        }
      ]
    },
    "html": {
      "patterns": [
        {
          "begin": "(^[ \\t]+)?(?=<(?i:script)\\b(?!-))",
          "beginCaptures": {
            "1": {
              "name": "punctuation.whitespace.embedded.leading.dartx"
            }
          },
          "end": "(?!\\G)([ \\t]*$\\n?)?",
          "endCaptures": {
            "1": {
              "name": "punctuation.whitespace.embedded.trailing.dartx"
            }
          },
          "patterns": [
            {
              "begin": "(<)((?i:script))\\b",
              "beginCaptures": {
                "0": {
                  "name": "meta.tag.metadata.script.start.dartx"
                },
                "1": {
                  "name": "punctuation.definition.tag.begin.dartx"
                },
                "2": {
                  "name": "entity.name.tag.dartx"
                }
              },
              "end": "(/)((?i:script))(>)",
              "endCaptures": {
                "0": {
                  "name": "meta.tag.metadata.script.end.dartx"
                },
                "1": {
                  "name": "punctuation.definition.tag.begin.dartx"
                },
                "2": {
                  "name": "entity.name.tag.dartx"
                },
                "3": {
                  "name": "punctuation.definition.tag.end.dartx"
                }
              },
              "name": "meta.embedded.block.dartx",
              "patterns": [
                {
                  "begin": "\\G",
                  "end": "(?=/)",
                  "patterns": [
                    {
                      "begin": "(>)",
                      "beginCaptures": {
                        "0": {
                          "name": "meta.tag.metadata.script.start.dartx"
                        },
                        "1": {
                          "name": "punctuation.definition.tag.end.dartx"
                        }
                      },
                      "end": "((<))(?=/(?i:script))",
                      "endCaptures": {
                        "0": {
                          "name": "meta.tag.metadata.script.end.dartx"
                        },
                        "1": {
                          "name": "punctuation.definition.tag.begin.dartx"
                        },
                        "2": {
                          "name": "source.js-ignored-vscode"
                        }
                      },
                      "patterns": [
                        {
                          "begin": "\\G",
                          "end": "(?=</(?i:script))",
                          "name": "source.js",
                          "patterns": [
                            {
                              "begin": "(^[ \\t]+)?(?=//)",
                              "beginCaptures": {
                                "1": {
                                  "name": "punctuation.whitespace.comment.leading.js"
                                }
                              },
                              "end": "(?!\\G)",
                              "patterns": [
                                {
                                  "begin": "//",
                                  "beginCaptures": {
                                    "0": {
                                      "name": "punctuation.definition.comment.js"
                                    }
                                  },
                                  "end": "(?=</script)|\\n",
                                  "name": "comment.line.double-slash.js"
                                }
                              ]
                            },
                            {
                              "begin": "/\\*",
                              "captures": {
                                "0": {
                                  "name": "punctuation.definition.comment.js"
                                }
                              },
                              "end": "\\*/|(?=</script)",
                              "name": "comment.block.js"
                            },
                            {
                              "include": "source.js"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "begin": "\\G",
                      "end": "(?ix:\n\t\t\t\t\t\t\t\t\t\t\t\t(?=>\t\t\t\t\t\t\t\t\t\t\t# Tag without type attribute\n\t\t\t\t\t\t\t\t\t\t\t\t  | type(?=[\\s=])\n\t\t\t\t\t\t\t\t\t\t\t\t  \t(?!\\s*=\\s*\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t''\t\t\t\t\t\t\t\t# Empty\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | \"\"\t\t\t\t\t\t\t\t\t#   Values\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | ('|\"|)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext/\t\t\t\t\t\t\t# Text mime-types\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjavascript(1\\.[0-5])?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | x-javascript\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | jscript\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | livescript\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | (x-)?ecmascript\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | babel\t\t\t\t\t\t# Javascript variant currently\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t#   recognized as such\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | application/\t\t\t\t\t# Application mime-types\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(x-)?javascript\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | (x-)?ecmascript\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | module\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\\s\"'>]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t)",
                      "name": "meta.tag.metadata.script.start.dartx",
                      "patterns": [
                        {
                          "include": "#html-attribute"
                        }
                      ]
                    },
                    {
                      "begin": "(?ix:\n\t\t\t\t\t\t\t\t\t\t\t\t(?=\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype\\s*=\\s*\n\t\t\t\t\t\t\t\t\t\t\t\t\t('|\"|)\n\t\t\t\t\t\t\t\t\t\t\t\t\ttext/\n\t\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tx-handlebars\n\t\t\t\t\t\t\t\t\t\t\t\t\t  | (x-(handlebars-)?|ng-)?template\n\t\t\t\t\t\t\t\t\t\t\t\t\t  | html\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\\s\"'>]\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t)",
                      "end": "((<))(?=/(?i:script))",
                      "endCaptures": {
                        "0": {
                          "name": "meta.tag.metadata.script.end.dartx"
                        },
                        "1": {
                          "name": "punctuation.definition.tag.begin.dartx"
                        },
                        "2": {
                          "name": "text.html.basic"
                        }
                      },
                      "patterns": [
                        {
                          "begin": "\\G",
                          "end": "(>)",
                          "endCaptures": {
                            "1": {
                              "name": "punctuation.definition.tag.end.dartx"
                            }
                          },
                          "name": "meta.tag.metadata.script.start.dartx",
                          "patterns": [
                            {
                              "include": "#html-attribute"
                            }
                          ]
                        },
                        {
                          "begin": "(?!\\G)",
                          "end": "(?=</(?i:script))",
                          "name": "text.html.basic",
                          "patterns": [
                            {
                              "include": "text.html.basic"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "begin": "(?=(?i:type))",
                      "end": "(<)(?=/(?i:script))",
                      "endCaptures": {
                        "0": {
                          "name": "meta.tag.metadata.script.end.dartx"
                        },
                        "1": {
                          "name": "punctuation.definition.tag.begin.dartx"
                        }
                      },
                      "patterns": [
                        {
                          "begin": "\\G",
                          "end": "(>)",
                          "endCaptures": {
                            "1": {
                              "name": "punctuation.definition.tag.end.dartx"
                            }
                          },
                          "name": "meta.tag.metadata.script.start.dartx",
                          "patterns": [
                            {
                              "include": "#html-attribute"
                            }
                          ]
                        },
                        {
                          "begin": "(?!\\G)",
                          "end": "(?=</(?i:script))",
                          "name": "source.unknown"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "begin": "(?i)(<)(base|link|meta)(?=\\s|/?>)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.dartx"
            },
            "2": {
              "name": "entity.name.tag.dartx"
            }
          },
          "end": "/?>",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.tag.end.dartx"
            }
          },
          "name": "meta.tag.metadata.$2.void.dartx",
          "patterns": [
            {
              "include": "#html-attribute"
            }
          ]
        },
        {
          "begin": "(?i)(<)(noscript|title)(?=\\s|/?>)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.dartx"
            },
            "2": {
              "name": "entity.name.tag.dartx"
            }
          },
          "end": ">",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.tag.end.dartx"
            }
          },
          "name": "meta.tag.metadata.$2.start.dartx",
          "patterns": [
            {
              "include": "#html-attribute"
            }
          ]
        },
        {
          "begin": "(?i)(</)(noscript|title)(?=\\s|/?>)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.dartx"
            },
            "2": {
              "name": "entity.name.tag.dartx"
            }
          },
          "end": ">",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.tag.end.dartx"
            }
          },
          "name": "meta.tag.metadata.$2.end.dartx",
          "patterns": [
            {
              "include": "#html-attribute"
            }
          ]
        },
        {
          "begin": "(?i)(<)(col|hr|input)(?=\\s|/?>)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.dartx"
            },
            "2": {
              "name": "entity.name.tag.dartx"
            }
          },
          "end": "/?>",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.tag.end.dartx"
            }
          },
          "name": "meta.tag.structure.$2.void.dartx",
          "patterns": [
            {
              "include": "#html-attribute"
            }
          ]
        },
        {
          "begin": "(?i)(<)(address|article|aside|blockquote|body|button|caption|colgroup|datalist|dd|details|dialog|div|dl|dt|fieldset|figcaption|figure|footer|form|head|header|hgroup|html|h[1-6]|label|legend|li|main|map|menu|meter|nav|ol|optgroup|option|output|p|pre|progress|section|select|slot|summary|table|tbody|td|template|textarea|tfoot|th|thead|tr|ul)(?=\\s|/?>)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.dartx"
            },
            "2": {
              "name": "entity.name.tag.dartx"
            }
          },
          "end": ">",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.tag.end.dartx"
            }
          },
          "name": "meta.tag.structure.$2.start.dartx",
          "patterns": [
            {
              "include": "#html-attribute"
            }
          ]
        },
        {
          "begin": "(?i)(</)(address|article|aside|blockquote|body|button|caption|colgroup|datalist|dd|details|dialog|div|dl|dt|fieldset|figcaption|figure|footer|form|head|header|hgroup|html|h[1-6]|label|legend|li|main|map|menu|meter|nav|ol|optgroup|option|output|p|pre|progress|section|select|slot|summary|table|tbody|td|template|textarea|tfoot|th|thead|tr|ul)(?=\\s|/?>)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.dartx"
            },
            "2": {
              "name": "entity.name.tag.dartx"
            }
          },
          "end": ">",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.tag.end.dartx"
            }
          },
          "name": "meta.tag.structure.$2.end.dartx",
          "patterns": [
            {
              "include": "#html-attribute"
            }
          ]
        },
        {
          "begin": "(?i)(<)(area|br|wbr)(?=\\s|/?>)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.dartx"
            },
            "2": {
              "name": "entity.name.tag.dartx"
            }
          },
          "end": "/?>",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.tag.end.dartx"
            }
          },
          "name": "meta.tag.inline.$2.void.dartx",
          "patterns": [
            {
              "include": "#html-attribute"
            }
          ]
        },
        {
          "begin": "(?i)(<)(a|abbr|b|bdi|bdo|cite|code|data|del|dfn|em|i|ins|kbd|mark|q|rp|rt|ruby|s|samp|small|span|strong|sub|sup|time|u|var)(?=\\s|/?>)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.dartx"
            },
            "2": {
              "name": "entity.name.tag.dartx"
            }
          },
          "end": ">",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.tag.end.dartx"
            }
          },
          "name": "meta.tag.inline.$2.start.dartx",
          "patterns": [
            {
              "include": "#html-attribute"
            }
          ]
        },
        {
          "begin": "(?i)(</)(a|abbr|b|bdi|bdo|cite|code|data|del|dfn|em|i|ins|kbd|mark|q|rp|rt|ruby|s|samp|small|span|strong|sub|sup|time|u|var)(?=\\s|/?>)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.dartx"
            },
            "2": {
              "name": "entity.name.tag.dartx"
            }
          },
          "end": ">",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.tag.end.dartx"
            }
          },
          "name": "meta.tag.inline.$2.end.dartx",
          "patterns": [
            {
              "include": "#html-attribute"
            }
          ]
        },
        {
          "begin": "(?i)(<)(embed|img|param|source|track)(?=\\s|/?>)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.dartx"
            },
            "2": {
              "name": "entity.name.tag.dartx"
            }
          },
          "end": "/?>",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.tag.end.dartx"
            }
          },
          "name": "meta.tag.object.$2.void.dartx",
          "patterns": [
            {
              "include": "#html-attribute"
            }
          ]
        },
        {
          "begin": "(?i)(<)(audio|canvas|iframe|object|picture|video)(?=\\s|/?>)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.dartx"
            },
            "2": {
              "name": "entity.name.tag.dartx"
            }
          },
          "end": ">",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.tag.end.dartx"
            }
          },
          "name": "meta.tag.object.$2.start.dartx",
          "patterns": [
            {
              "include": "#html-attribute"
            }
          ]
        },
        {
          "begin": "(?i)(</)(audio|canvas|iframe|object|picture|video)(?=\\s|/?>)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.dartx"
            },
            "2": {
              "name": "entity.name.tag.dartx"
            }
          },
          "end": ">",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.tag.end.dartx"
            }
          },
          "name": "meta.tag.object.$2.end.dartx",
          "patterns": [
            {
              "include": "#html-attribute"
            }
          ]
        }
      ]
    },
    "html-attribute": {
      "patterns": [
        {
          "begin": "(s(hape|cope|t(ep|art)|ize(s)?|p(ellcheck|an)|elected|lot|andbox|rc(set|doc|lang)?)|h(ttp-equiv|i(dden|gh)|e(ight|aders)|ref(lang)?)|n(o(nce|validate|module)|ame)|c(h(ecked|arset)|ite|o(nt(ent(editable)?|rols)|ords|l(s(pan)?|or))|lass|rossorigin)|t(ype(mustmatch)?|itle|a(rget|bindex)|ranslate)|i(s(map)?|n(tegrity|putmode)|tem(scope|type|id|prop|ref)|d)|op(timum|en)|d(i(sabled|r(name)?)|ownload|e(coding|f(er|ault))|at(etime|a)|raggable)|usemap|p(ing|oster|la(ysinline|ceholder)|attern|reload)|enctype|value|kind|for(m(novalidate|target|enctype|action|method)?)?|w(idth|rap)|l(ist|o(op|w)|a(ng|bel))|a(s(ync)?|c(ce(sskey|pt(-charset)?)|tion)|uto(c(omplete|apitalize)|play|focus)|l(t|low(usermedia|paymentrequest|fullscreen))|bbr)|r(ows(pan)?|e(versed|quired|ferrerpolicy|l|adonly))|m(in(length)?|u(ted|ltiple)|e(thod|dia)|a(nifest|x(length)?)))(?![\\w:-])",
          "beginCaptures": {
            "0": {
              "name": "entity.other.attribute-name.dartx"
            }
          },
          "end": "(?=\\s*+[^=\\s])",
          "name": "meta.attribute.$1.dartx",
          "patterns": [
            {
              "include": "#html-attribute-interior"
            }
          ]
        },
        {
          "begin": "(data-[a-z\\-]+)(?![\\w:-])",
          "beginCaptures": {
            "0": {
              "name": "entity.other.attribute-name.dartx"
            }
          },
          "end": "(?=\\s*+[^=\\s])",
          "name": "meta.attribute.data-x.$1.dartx",
          "patterns": [
            {
              "include": "#html-attribute-interior"
            }
          ]
        },
        {
          "match": "[^\\s>]+",
          "name": "invalid.illegal.character-not-allowed-here.dartx"
        }
      ]
    },
    "html-attribute-interior": {
      "patterns": [
        {
          "begin": "=",
          "beginCaptures": {
            "0": {
              "name": "punctuation.separator.key-value.dartx"
            }
          },
          "end": "(?<=[^\\s=])(?!\\s*=)|(?=/?>)",
          "patterns": [
            {
              "match": "([^\\s\"'=<>`/]|/(?!>))+",
              "name": "string.unquoted.dartx"
            },
            {
              "match": "=",
              "name": "invalid.illegal.unexpected-equals-sign.dartx"
            }
          ]
        },
        {
          "begin": "=",
          "beginCaptures": {
            "0": {
              "name": "punctuation.separator.key-value.dartx"
            }
          },
          "end": "(?<=[^\\s=])(?!\\s*=)|(?=/?>)",
          "patterns": [
            {
              "match": "([^\\s\"'=<>`/]|/(?!>))+",
              "name": "string.unquoted.dartx"
            },
            {
              "match": "=",
              "name": "invalid.illegal.unexpected-equals-sign.dartx"
            }
          ]
        }
      ]
    }
  },
  "scopeName": "source.dartx"
}